<%- layout("shared/layout", { cssFile: "chat2.css" }) %>

<div class="container mt-3">
    <h1>Chat with <%= chat.participantName %></h1>
    <!-- Chat Box -->
    <div id="chatBox" class="chat-box border rounded p-3 mb-3" style="height: 300px; overflow-y: auto;">
        <% if (chat.messages.length === 0) { %>
            <p class="text-muted">No messages yet. Start the conversation!</p>
        <% } else { %>
            <% chat.messages.forEach(message => { %>
                <div class="<%= message.sender === userId ? 'text-end' : 'text-start' %> mb-2">
                    <strong><%= message.sender === userId ? 'You' : chat.participantName %>:</strong>
                    <p class="m-0"><%= message.text %></p>
                    <small class="text-muted"><%= new Date(message.timestamp).toLocaleString() %></small>
                </div>
            <% }); %>
        <% } %>
    </div>

    <!-- Message Input -->
    <form id="chatForm" class="d-flex">
        <input type="text" id="messageInput" class="form-control me-2" placeholder="Type your message..." required />
        <button type="submit" class="btn btn-primary">Send</button>
    </form>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const chatId = "<%= chat._id %>";
    const userId = "<%= userId %>";

    // Join the chat room
    socket.emit("joinRoom", chatId);

    // Append a new message to the chat box
    function appendMessage(sender, text, timestamp) {
        const chatBox = document.getElementById("chatBox");
        const messageDiv = document.createElement("div");
        messageDiv.className = sender === userId ? "text-end mb-2" : "text-start mb-2";

        messageDiv.innerHTML = `
            <strong>${sender === userId ? 'You' : '<%= chat.participantName %>'}:</strong>
            <p class="m-0">${text}</p>
            <small class="text-muted">${new Date(timestamp).toLocaleString()}</small>
        `;

        chatBox.appendChild(messageDiv);
        chatBox.scrollTop = chatBox.scrollHeight;
    }

    // Listen for new messages
    socket.on("message", (message) => {
        appendMessage(message.sender, message.text, message.timestamp);
    });

    // Handle message form submission
    document.getElementById("chatForm").addEventListener("submit", (event) => {
        event.preventDefault();
        const messageInput = document.getElementById("messageInput");
        const text = messageInput.value.trim();

        if (text) {
            // Emit the new message event
            socket.emit("newMessage", { chatId, senderId: userId, text });

            // Clear the input field
            messageInput.value = "";
        }
    });
</script>
